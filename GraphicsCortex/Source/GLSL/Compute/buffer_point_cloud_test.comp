#<compute shader>

#version 460 core
#define id gl_GlobalInvocationID

layout (local_size_x = 32, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0) buffer point_cloud_buffer {
	vec4 point_cloud_buffer_data[];
};

uniform ivec2 point_cloud_resolution;

uniform vec2 range_begin;
uniform vec2 range_end;
uniform float amplitude = 1;

float function(float x){
	return	1.2 * exp(1.0/2 * -(x + 2)*(x + 2)) / sqrt(2*3.14159265) + 
			0.8 * exp(1.0/2 * -(x - 2)*(x - 2)) / sqrt(2*3.14159265);
}

void main(){
	ivec2 id2d = ivec2(id.x % point_cloud_resolution.x, id.x / point_cloud_resolution.x);
	if (id2d.y >= point_cloud_resolution.y) return;

	vec2 real_coordinate = range_begin + (vec2(id2d) / point_cloud_resolution * (range_end - range_begin));
	ivec2 centered_id2d = id2d - (point_cloud_resolution) / 2;

	point_cloud_buffer_data[id.x] = vec4(centered_id2d.x,  amplitude * (function(length(real_coordinate))), centered_id2d.y, 0);
}
